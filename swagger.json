{
    "openapi": "3.1.0",
    "info": {
        "title": "TOURNAMENT API",
        "version": "1.0.0",
        "description": "API pour gérer des tournois (principalement de TCG)"
    },
    "paths": {
        "/users/sign_up": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Créer un nouvel utilisateur",
                "description": "Permet de créer un utilisateur avec son nom, prénom, email, mot de passe et date de naissance.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/users"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Utilisateur créé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email déjà utilisé ou validation échouée"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Renvoie un token d'identifiant d'un user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/login"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Connexion réussie, retourne un token JWT",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email ou mot de passe incorrect"
                    },
                    "500": {
                        "description": "Servor error"
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve every event starting today",
                "description": "Permet de récupérer une liste d'événements avec les options de pagination (limit, offset, page).",
                "parameters":[
                    {
                        "name":"page",
                        "in":"query",
                        "description":"Numéro de la page",
                        "required": false,
                        "schema":{
                            "type":"integer",
                            "default":1
                        }
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Champ sur lequel trier les événements (ex: createdAt, name, etc.)",
                        "required":false,
                        "schema":{
                            "type":"integer",
                            "default":15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/events"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Servor error"
                    }
                }
            }
        },
        "/events/create": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Créer un événement",
                "description": "Cette route permet de créer un nouvel événement avec les informations fournies et une image (optionnelle).",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/eventCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event créé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/events"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur lors de la création de l'événement (Event déjà créé ou autre erreur de validation)"
                    },
                    "401": {
                        "description": "Utilisateur non authentifié"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/events/archives": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve every event with a filter",
                "parameters": [
                    {
                        "name": "id_categorie",
                        "in": "query",
                        "description": "Filter par les ID de catégorie",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id_format",
                        "in": "query",
                        "description": "Filter par les ID de formats",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_debut",
                        "in": "query",
                        "description": "Filter par la date de début (au format YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_fin",
                        "in": "query",
                        "description": "Filter par la date de fin (au format YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "terme",
                        "in": "query",
                        "description": "Cherche un terme à trouver dans les noms ou descriptions des événements.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/events"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Servor error"
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Récupère un événement par son ID",
                "description": "Donne un événement spécifique par son ID et le nombre de place qu'il lui reste",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de l'événement",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "event": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/events"
                                            }
                                        },
                                        "place_restante": {
                                            "type": "integer",
                                            "description": "Nombre de places libres pour l'event"
                                        }
                                    },
                                    "required": [
                                        "event",
                                        "place_resante"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Servor error"
                    }
                }
            }
        },
        "/events/{id}/inscription": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Inscription d'un user via son ID et celui d'un event",
                "description": " Inscrit un utilisateur à un événement via l'ID de l'événement et l'ID de l'utilisateur. (déjà connecté)",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de l'événement",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inscription réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inscription réussie"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User not found"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "409": {
                        "description": "Conflit d'inscription"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/events/{id}/edit": {
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Met à jour un event",
                "description": "Cette route permet de mettre à jour un événement existant si l'utilisateur est le créateur de l'événement.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de l'événement",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/eventEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event mis à jours avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/events"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation"
                    },
                    "401": {
                        "description": "Utilisateur non authorisé à modifier cet event"
                    },
                    "404": {
                        "description": "Event non trouvé"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "events": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "places_count": {
                        "type": "integer"
                    },
                    "id_categorie": {
                        "type": "integer"
                    },
                    "id_format": {
                        "type": "integer"
                    },
                    "image": {
                        "type": "string",
                        "format": "url"
                    },
                    "date_debut": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "date_fin": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "annulation": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "id_createur": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "places_count",
                    "id_categorie",
                    "id_format",
                    "date_debut",
                    "date_fin"
                ]
            },
            "eventCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Nom de l'event",
                        "in": "formData"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description de l'event",
                        "in": "formData"
                    },
                    "places_count": {
                        "type": "integer",
                        "description": "Nombre de places disponnibles",
                        "in": "formData"
                    },
                    "id_categorie": {
                        "type": "integer",
                        "description": "ID de la categorie de l'event (cf. categories)",
                        "in": "formData"
                    },
                    "id_format": {
                        "type": "integer",
                        "description": "ID du format de l'event (cf. formats)",
                        "in": "formData"
                    },
                    "date_debut": {
                        "type": "date",
                        "description": "Date et heure de début de l'event",
                        "in": "formData",
                        "format": "date-time"
                    },
                    "date_fin": {
                        "type": "date",
                        "description": "Date et heure de fin de l'event",
                        "in": "formData",
                        "format": "date-time"
                    },
                    "annulation": {
                        "type": "boolean",
                        "description": "Si l'event est annulé (Faux par défaut)",
                        "in": "formData"
                    },
                    "image": {
                        "type": "file",
                        "description": "Image de l'event",
                        "in": "formData"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "places_count",
                    "id_categorie",
                    "id_format",
                    "date_debut",
                    "date_fin"
                ]
            },
            "eventEdit": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Nom de l'event",
                        "in": "formData",
                        "example": "Nom d'event"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description de l'event",
                        "in": "formData",
                        "example": "Description d'event"
                    },
                    "places_count": {
                        "type": "integer",
                        "description": "Nombre de places disponnibles",
                        "in": "formData",
                        "example": 8
                    },
                    "id_categorie": {
                        "type": "integer",
                        "description": "ID de la categorie de l'event (cf. categories)",
                        "in": "formData",
                        "example": 1
                    },
                    "id_format": {
                        "type": "integer",
                        "description": "ID du format de l'event (cf. formats)",
                        "in": "formData",
                        "example": 1
                    },
                    "date_debut": {
                        "type": "date",
                        "description": "Date et heure de début de l'event",
                        "in": "formData",
                        "format": "date-time",
                        "example": ""
                    },
                    "date_fin": {
                        "type": "date",
                        "description": "Date et heure de fin de l'event",
                        "in": "formData",
                        "format": "date-time",
                        "example": ""
                    },
                    "annulation": {
                        "type": "boolean",
                        "description": "Si l'event est annulé",
                        "in": "formData",
                        "example": false
                    },
                    "image": {
                        "type": "file",
                        "description": "Image de l'event",
                        "in": "formData"
                    }
                }
            },
            "users": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "nom": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "prenom": {
                        "type": "string",
                        "example": "John"
                    },
                    "mail": {
                        "type": "string",
                        "example": "example@mail.com"
                    },
                    "mdp": {
                        "type": "string",
                        "minLength": 8,
                        "pattern": "^(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z])(?=.*[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).{8,}$",
                        "example": "Password1234!"
                    },
                    "ddn": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "nom",
                    "prenom",
                    "mail",
                    "mdp"
                ]
            },
            "login": {
                "type": "object",
                "properties": {
                    "mail": {
                        "type": "string",
                        "format": "email",
                        "example": "example@mail.com"
                    },
                    "mdp": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "pattern": "^(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z])(?=.*[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).{8,}$",
                        "example": "Password1234!"
                    }
                },
                "required": [
                    "mail",
                    "mdp"
                ]
            }
        }
    },
    "security": [
        {
            "jwtAuth": []
        }
    ]
}